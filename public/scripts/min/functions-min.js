function Poster(t,e,r,a,o){this.title=t,this.caption=e,this.year=r,this.urls=a,this.largePosterUrl=o}const prefixes=["prefix poster: <http://uib.no/info310/posterOntology#> ","prefix owl: <http://www.w3.org/2002/07/owl#> ","prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> ","prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> ","prefix dbpediaOntology: <http://dbpedia.org/ontology/>","prefix dbpedia: <http://dbpedia.org/resource/>"].join(" "),queryEndpoint="http://localhost:8080/ds/?query=",format="&format=json";$(function(){function t(t){for(var r=$(".posters"),a=0;a<t.length;a++){var o=t[a],n=e(o,null);r.append(n)}}function e(t,e){return"<img class='img-responsive' src=\""+t+'" alt="'+e+'">'}function r(t){for(var e=[],r=0;r<t.length;r++)e.push(t[r].url.value);return e}function a(){$("tbody tr").on("click",function(t){t.preventDefault();const e=$(this).data("postername");var r=prefixes+'SELECT ?name ?url ?caption ?actors ?poster ?abstract ?dbpediaUrl WHERE { ?poster a dbpediaOntology:Film;         a poster:Poster;         poster:title "'+e+'";         poster:posterUrl ?url;         poster:caption ?caption;         owl:sameAs ?dbpediaUrl .  OPTIONAL {      SERVICE <http://dbpedia.org/sparql/> {              ?dbpediaUrl a dbpediaOntology:Film;              dbpediaOntology:abstract ?abstract .  }  filter (langMatches(lang(?abstract), "EN")) }} ',a=queryEndpoint+encodeURIComponent(r)+format;$.get(a,function(t){console.log(t)})})}var o={searchBtnClick:function(){$("#searchBtn").on("click",function(t){$(".col-xs-12").html(""),t.preventDefault();var e=$("#nameSearch").val();if(0===e.length)$("legend").html("Search cannot be empty");else{var r=prefixes+'SELECT ?name ?year ?url ?caption WHERE { ?poster a poster:Poster;  poster:title ?name;  rdfs:label ?name;  poster:year ?year;  poster:caption ?caption;  poster:posterUrl ?url .  FILTER(strStarts(?name, "'+e+'"))}  ORDER BY DESC(?year) ',n=queryEndpoint+encodeURIComponent(r)+format;$.get(n,function(t){console.log(t),t.results.bindings.length>0&&(o.showMultipleHitList(t.results.bindings),a())})}})},populateData:function(e){var a=e.results.bindings,o=null;if(0==a.length)$("legend").html("No results for "+$("#nameSearch").val());else if(a.length>0){const n=a[0],l=n.name.value,s=n.caption.value,i=r(a),p=n.year.value;o=new Poster(l,s,p,i,null),t(o.urls),$(".posterData").append("<h1>"+s+"</h1>")}},showMultipleHitList:function(t){$("legend").html("There was multiple hits for "+$("#nameSearch").val()),$("legend").append("<p>Select your desired poster from the list</p>");var e=$(".results");$(".multipleHitTable").removeClass("hide");var r=$(".multipleHitTable tbody");$.each(t,function(t,e){r.append('<tr data-postername="'+e.name.value+'"><td>'+e.name.value+"</td><td>"+e.caption.value+"</td><td>"+e.year.value+'</td><td><a href="'+e.url.value+'">'+e.url.value+"</a></td></tr>")})}};o.searchBtnClick()});