function Poster(t,e,a,r,o,n){this.title=t,this.caption=e,this.year=a,this.urls=r,this.largePosterUrl=o,this.abstract=n}const prefixes=["prefix poster: <http://uib.no/info310/posterOntology#> ","prefix owl: <http://www.w3.org/2002/07/owl#> ","prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> ","prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> ","prefix dbpediaOntology: <http://dbpedia.org/ontology/>","prefix dbpediaProp: <http://dbpedia.org/property/>","prefix dbpedia: <http://dbpedia.org/resource/>"].join(" "),queryEndpoint="http://localhost:8080/ds/?query=",format="&format=json";$(function(){function t(t){if(t){var e=$(".posters");e.html("<h2>Movie Poster(s)</h2>");for(var r=0;r<t.length;r++){var o=t[r],n=a(o,null);e.append(n)}}}function e(t,e){return"<img class='img-responsive' src=\""+t+'" alt="'+e+'">'}function a(t,a){var r=e(t,a);return"<div class='col-xs-12 col-sm-8 col-md-8 col-lg-6'><a class='' href=\""+t+'">'+r+" </a></div>"}function r(t){if(console.log("Getting poster urls",t),t){for(var e=[],a=0;a<t.length;a++)e.push(t[a].url.value);return e}}function o(e){var a=prefixes+'SELECT distinct ?name ?year ?caption ?poster ?abstract ?dbpediaUrl ?budget ?actorName ?directorName WHERE { ?poster a dbpediaOntology:Film;         a poster:Poster;         poster:title "'+e+'";         poster:title ?name;         poster:year ?year;         poster:caption ?caption;         owl:sameAs ?dbpediaUrl .  OPTIONAL {  SERVICE <http://dbpedia.org/sparql/> {  ?dbpediaUrl a dbpediaOntology:Film;  dbpediaOntology:abstract ?abstract .  OPTIONAL {  ?dbpediaUrl dbpediaOntology:starring ?actors;  dbpediaProp:budget ?budget;  dbpediaOntology:director ?director .  ?actors rdfs:label ?actorName .  ?director rdfs:label ?directorName .  }}  FILTER (langMatches(lang(?abstract), "EN"))  FILTER (langMatches(lang(?actorName), "EN"))  FILTER (langMatches(lang(?directorName), "EN"))  }}',o=queryEndpoint+encodeURIComponent(a)+format;$.get(o,function(t){console.log(t),l.populateData(t)});var n=prefixes+"SELECT ?url WHERE { ?poster a poster:Poster;          poster:posterUrl ?url;          poster:title "+JSON.stringify(e)+" }",s=queryEndpoint+encodeURIComponent(n)+format;$.get(s,function(e){console.log(e);const a=r(e.results.bindings);t(a)})}function n(){$("tbody tr").on("click",function(t){t.preventDefault();const e=$(this).data("postername");o(e)})}var l={searchBtnClick:function(){$("#searchBtn").on("click",function(t){t.preventDefault();var e=$("#nameSearch").val();if(0===e.length)$("legend").html("Search cannot be empty");else{$(".multipleHitTable tbody").html("");var a=prefixes+'SELECT DISTINCT ?name ?year ?caption WHERE { ?poster a poster:Poster;  poster:title ?name;  rdfs:label ?name;  poster:year ?year;  poster:caption ?caption .  FILTER(contains(?name, "'+e+'"))}  ORDER BY DESC(?year) ',r=queryEndpoint+encodeURIComponent(a)+format;$.get(r,function(t){if(console.log(t),1==t.results.bindings.length){const e=t.results.bindings[0].name.value;o(e)}else t.results.bindings.length>1&&(l.showMultipleHitList(t.results.bindings),n())})}})},populateData:function(t){var e=t.results.bindings,a=null;if(0==e.length)$("legend").html("No results for "+$("#nameSearch").val());else if(e.length>0){const r=e[0],o=r.name.value,n=r.caption.value,l=r.year.value;var s=null;try{s=r.abstract.value}catch(t){console.log(t),console.log("No abstract for "+o),s="No abstract available"}a=new Poster(o,n,l,null,null,s),$(".posterData").html(""),$(".posterData").append("<h1>"+n+"</h1><p>"+s+"</p>")}},showMultipleHitList:function(t){$("legend").html("There was multiple hits for "+$("#nameSearch").val()),$("legend").append("<p>Select your desired poster from the list</p>");var e=$(".results");$(".multipleHitTable").removeClass("hide");var a=$(".multipleHitTable tbody");$.each(t,function(t,e){a.append('<tr data-postername="'+e.name.value+'"><td>'+e.name.value+"</td><td>"+e.caption.value+"</td><td>"+e.year.value+"</td></tr>")})}};l.searchBtnClick()});