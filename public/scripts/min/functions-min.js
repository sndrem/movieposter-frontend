function Poster(t,e,r,o,a,n){this.title=t,this.caption=e,this.year=r,this.urls=o,this.largePosterUrl=a,this.abstract=n}const prefixes=["prefix poster: <http://uib.no/info310/posterOntology#> ","prefix owl: <http://www.w3.org/2002/07/owl#> ","prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> ","prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> ","prefix dbpediaOntology: <http://dbpedia.org/ontology/>","prefix dbpedia: <http://dbpedia.org/resource/>"].join(" "),queryEndpoint="http://localhost:8080/ds/?query=",format="&format=json";$(function(){function t(t){if(t){var r=$(".posters");r.html("");for(var o=0;o<t.length;o++){var a=t[o],n=e(a,null);r.append(n)}}}function e(t,e){return"<img class='img-responsive' src=\""+t+'" alt="'+e+'">'}function r(t){if(console.log("Getting poster urls",t),t){for(var e=[],r=0;r<t.length;r++)e.push(t[r].url.value);return e}}function o(){$("tbody tr").on("click",function(e){e.preventDefault();const o=$(this).data("postername");var n=prefixes+'SELECT distinct ?name ?year ?caption ?actors ?poster ?abstract ?dbpediaUrl WHERE { ?poster a dbpediaOntology:Film;         a poster:Poster;         poster:title "'+o+'";         poster:title ?name;         poster:year ?year;         poster:caption ?caption;         owl:sameAs ?dbpediaUrl .  OPTIONAL {      SERVICE <http://dbpedia.org/sparql/> {              ?dbpediaUrl a dbpediaOntology:Film;              dbpediaOntology:abstract ?abstract .  }  filter (langMatches(lang(?abstract), "EN")) }} ',l=queryEndpoint+encodeURIComponent(n)+format;$.get(l,function(t){a.populateData(t)});var s=prefixes+"SELECT ?url WHERE { ?poster a poster:Poster;          poster:posterUrl ?url;          poster:title "+JSON.stringify(o)+" }",i=queryEndpoint+encodeURIComponent(s)+format;$.get(i,function(e){console.log(e);const o=r(e.results.bindings);t(o)})})}var a={searchBtnClick:function(){$("#searchBtn").on("click",function(t){t.preventDefault();var e=$("#nameSearch").val();if(0===e.length)$("legend").html("Search cannot be empty");else{$(".multipleHitTable tbody").html("");var r=prefixes+'SELECT DISTINCT ?name ?year ?caption WHERE { ?poster a poster:Poster;  poster:title ?name;  rdfs:label ?name;  poster:year ?year;  poster:caption ?caption .  FILTER(strStarts(?name, "'+e+'"))}  ORDER BY DESC(?year) ',n=queryEndpoint+encodeURIComponent(r)+format;$.get(n,function(t){console.log(t),t.results.bindings.length>0&&(a.showMultipleHitList(t.results.bindings),o())})}})},populateData:function(t){var e=t.results.bindings,r=null;if(0==e.length)$("legend").html("No results for "+$("#nameSearch").val());else if(e.length>0){const o=e[0],a=o.name.value,n=o.caption.value,l=o.year.value;var s=null;try{s=o.abstract.value}catch(t){console.log(t),console.log("No abstract for "+a)}r=new Poster(a,n,l,null,null,s),$(".posterData").html(""),$(".posterData").append("<h1>"+n+"</h1><p>"+s+"</p>")}},showMultipleHitList:function(t){$("legend").html("There was multiple hits for "+$("#nameSearch").val()),$("legend").append("<p>Select your desired poster from the list</p>");var e=$(".results");$(".multipleHitTable").removeClass("hide");var r=$(".multipleHitTable tbody");$.each(t,function(t,e){r.append('<tr data-postername="'+e.name.value+'"><td>'+e.name.value+"</td><td>"+e.caption.value+"</td><td>"+e.year.value+"</td></tr>")})}};a.searchBtnClick()});